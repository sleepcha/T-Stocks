//
// Option.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Опцион. */

public struct Option: Codable {

    public let uid: String?
    public let positionUid: String?
    public let ticker: String?
    public let classCode: String?
    public let basicAssetPositionUid: String?
    public let tradingStatus: SecurityTradingStatus?
    public let realExchange: RealExchange?
    public let direction: OptionDirection?
    public let paymentType: OptionPaymentType?
    public let style: OptionStyle?
    public let settlementType: OptionSettlementType?
    public let name: String?
    public let currency: String?
    public let settlementCurrency: String?
    public let assetType: String?
    public let basicAsset: String?
    public let exchange: String?
    public let countryOfRisk: String?
    public let countryOfRiskName: String?
    public let sector: String?
    public let lot: Int?
    public let basicAssetSize: Quotation?
    public let klong: Quotation?
    public let kshort: Quotation?
    public let dlong: Quotation?
    public let dshort: Quotation?
    public let dlongMin: Quotation?
    public let dshortMin: Quotation?
    public let minPriceIncrement: Quotation?
    public let strikePrice: MoneyValue?
    public let expirationDate: Date?
    public let firstTradeDate: Date?
    public let lastTradeDate: Date?
    public let first1minCandleDate: Date?
    public let first1dayCandleDate: Date?
    public let shortEnabledFlag: Bool?
    public let forIisFlag: Bool?
    public let otcFlag: Bool?
    public let buyAvailableFlag: Bool?
    public let sellAvailableFlag: Bool?
    public let forQualInvestorFlag: Bool?
    public let weekendFlag: Bool?
    public let blockedTcaFlag: Bool?
    public let apiTradeAvailableFlag: Bool?

    public init(uid: String? = nil, positionUid: String? = nil, ticker: String? = nil, classCode: String? = nil, basicAssetPositionUid: String? = nil, tradingStatus: SecurityTradingStatus? = nil, realExchange: RealExchange? = nil, direction: OptionDirection? = nil, paymentType: OptionPaymentType? = nil, style: OptionStyle? = nil, settlementType: OptionSettlementType? = nil, name: String? = nil, currency: String? = nil, settlementCurrency: String? = nil, assetType: String? = nil, basicAsset: String? = nil, exchange: String? = nil, countryOfRisk: String? = nil, countryOfRiskName: String? = nil, sector: String? = nil, lot: Int? = nil, basicAssetSize: Quotation? = nil, klong: Quotation? = nil, kshort: Quotation? = nil, dlong: Quotation? = nil, dshort: Quotation? = nil, dlongMin: Quotation? = nil, dshortMin: Quotation? = nil, minPriceIncrement: Quotation? = nil, strikePrice: MoneyValue? = nil, expirationDate: Date? = nil, firstTradeDate: Date? = nil, lastTradeDate: Date? = nil, first1minCandleDate: Date? = nil, first1dayCandleDate: Date? = nil, shortEnabledFlag: Bool? = nil, forIisFlag: Bool? = nil, otcFlag: Bool? = nil, buyAvailableFlag: Bool? = nil, sellAvailableFlag: Bool? = nil, forQualInvestorFlag: Bool? = nil, weekendFlag: Bool? = nil, blockedTcaFlag: Bool? = nil, apiTradeAvailableFlag: Bool? = nil) {
        self.uid = uid
        self.positionUid = positionUid
        self.ticker = ticker
        self.classCode = classCode
        self.basicAssetPositionUid = basicAssetPositionUid
        self.tradingStatus = tradingStatus
        self.realExchange = realExchange
        self.direction = direction
        self.paymentType = paymentType
        self.style = style
        self.settlementType = settlementType
        self.name = name
        self.currency = currency
        self.settlementCurrency = settlementCurrency
        self.assetType = assetType
        self.basicAsset = basicAsset
        self.exchange = exchange
        self.countryOfRisk = countryOfRisk
        self.countryOfRiskName = countryOfRiskName
        self.sector = sector
        self.lot = lot
        self.basicAssetSize = basicAssetSize
        self.klong = klong
        self.kshort = kshort
        self.dlong = dlong
        self.dshort = dshort
        self.dlongMin = dlongMin
        self.dshortMin = dshortMin
        self.minPriceIncrement = minPriceIncrement
        self.strikePrice = strikePrice
        self.expirationDate = expirationDate
        self.firstTradeDate = firstTradeDate
        self.lastTradeDate = lastTradeDate
        self.first1minCandleDate = first1minCandleDate
        self.first1dayCandleDate = first1dayCandleDate
        self.shortEnabledFlag = shortEnabledFlag
        self.forIisFlag = forIisFlag
        self.otcFlag = otcFlag
        self.buyAvailableFlag = buyAvailableFlag
        self.sellAvailableFlag = sellAvailableFlag
        self.forQualInvestorFlag = forQualInvestorFlag
        self.weekendFlag = weekendFlag
        self.blockedTcaFlag = blockedTcaFlag
        self.apiTradeAvailableFlag = apiTradeAvailableFlag
    }


}
