//
// PortfolioPosition.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Позиции портфеля. */

public struct PortfolioPosition: Codable {

    public let figi: String?
    public let instrumentType: String?
    public let quantity: Quotation?
    public let averagePositionPrice: MoneyValue?
    public let expectedYield: Quotation?
    public let currentNkd: MoneyValue?
    public let averagePositionPricePt: Quotation?
    public let currentPrice: MoneyValue?
    public let averagePositionPriceFifo: MoneyValue?
    public let quantityLots: Quotation?
    public let blocked: Bool?
    public let blockedLots: Quotation?
    public let positionUid: String?
    public let instrumentUid: String?
    public let varMargin: MoneyValue?
    public let expectedYieldFifo: Quotation?

    public init(figi: String? = nil, instrumentType: String? = nil, quantity: Quotation? = nil, averagePositionPrice: MoneyValue? = nil, expectedYield: Quotation? = nil, currentNkd: MoneyValue? = nil, averagePositionPricePt: Quotation? = nil, currentPrice: MoneyValue? = nil, averagePositionPriceFifo: MoneyValue? = nil, quantityLots: Quotation? = nil, blocked: Bool? = nil, blockedLots: Quotation? = nil, positionUid: String? = nil, instrumentUid: String? = nil, varMargin: MoneyValue? = nil, expectedYieldFifo: Quotation? = nil) {
        self.figi = figi
        self.instrumentType = instrumentType
        self.quantity = quantity
        self.averagePositionPrice = averagePositionPrice
        self.expectedYield = expectedYield
        self.currentNkd = currentNkd
        self.averagePositionPricePt = averagePositionPricePt
        self.currentPrice = currentPrice
        self.averagePositionPriceFifo = averagePositionPriceFifo
        self.quantityLots = quantityLots
        self.blocked = blocked
        self.blockedLots = blockedLots
        self.positionUid = positionUid
        self.instrumentUid = instrumentUid
        self.varMargin = varMargin
        self.expectedYieldFifo = expectedYieldFifo
    }


}
