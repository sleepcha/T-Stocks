//
// OperationType.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Тип операции. */
public enum OperationType: String, Codable {
    case unspecified = "OPERATION_TYPE_UNSPECIFIED"
    case input = "OPERATION_TYPE_INPUT"
    case bondTax = "OPERATION_TYPE_BOND_TAX"
    case outputSecurities = "OPERATION_TYPE_OUTPUT_SECURITIES"
    case overnight = "OPERATION_TYPE_OVERNIGHT"
    case tax = "OPERATION_TYPE_TAX"
    case bondRepaymentFull = "OPERATION_TYPE_BOND_REPAYMENT_FULL"
    case sellCard = "OPERATION_TYPE_SELL_CARD"
    case dividendTax = "OPERATION_TYPE_DIVIDEND_TAX"
    case output = "OPERATION_TYPE_OUTPUT"
    case bondRepayment = "OPERATION_TYPE_BOND_REPAYMENT"
    case taxCorrection = "OPERATION_TYPE_TAX_CORRECTION"
    case serviceFee = "OPERATION_TYPE_SERVICE_FEE"
    case benefitTax = "OPERATION_TYPE_BENEFIT_TAX"
    case marginFee = "OPERATION_TYPE_MARGIN_FEE"
    case buy = "OPERATION_TYPE_BUY"
    case buyCard = "OPERATION_TYPE_BUY_CARD"
    case inputSecurities = "OPERATION_TYPE_INPUT_SECURITIES"
    case sellMargin = "OPERATION_TYPE_SELL_MARGIN"
    case brokerFee = "OPERATION_TYPE_BROKER_FEE"
    case buyMargin = "OPERATION_TYPE_BUY_MARGIN"
    case dividend = "OPERATION_TYPE_DIVIDEND"
    case sell = "OPERATION_TYPE_SELL"
    case coupon = "OPERATION_TYPE_COUPON"
    case successFee = "OPERATION_TYPE_SUCCESS_FEE"
    case dividendTransfer = "OPERATION_TYPE_DIVIDEND_TRANSFER"
    case accruingVarmargin = "OPERATION_TYPE_ACCRUING_VARMARGIN"
    case writingOffVarmargin = "OPERATION_TYPE_WRITING_OFF_VARMARGIN"
    case deliveryBuy = "OPERATION_TYPE_DELIVERY_BUY"
    case deliverySell = "OPERATION_TYPE_DELIVERY_SELL"
    case trackMfee = "OPERATION_TYPE_TRACK_MFEE"
    case trackPfee = "OPERATION_TYPE_TRACK_PFEE"
    case taxProgressive = "OPERATION_TYPE_TAX_PROGRESSIVE"
    case bondTaxProgressive = "OPERATION_TYPE_BOND_TAX_PROGRESSIVE"
    case dividendTaxProgressive = "OPERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE"
    case benefitTaxProgressive = "OPERATION_TYPE_BENEFIT_TAX_PROGRESSIVE"
    case taxCorrectionProgressive = "OPERATION_TYPE_TAX_CORRECTION_PROGRESSIVE"
    case taxRepoProgressive = "OPERATION_TYPE_TAX_REPO_PROGRESSIVE"
    case taxRepo = "OPERATION_TYPE_TAX_REPO"
    case taxRepoHold = "OPERATION_TYPE_TAX_REPO_HOLD"
    case taxRepoRefund = "OPERATION_TYPE_TAX_REPO_REFUND"
    case taxRepoHoldProgressive = "OPERATION_TYPE_TAX_REPO_HOLD_PROGRESSIVE"
    case taxRepoRefundProgressive = "OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSIVE"
    case divExt = "OPERATION_TYPE_DIV_EXT"
    case taxCorrectionCoupon = "OPERATION_TYPE_TAX_CORRECTION_COUPON"
    case cashFee = "OPERATION_TYPE_CASH_FEE"
    case outFee = "OPERATION_TYPE_OUT_FEE"
    case outStampDuty = "OPERATION_TYPE_OUT_STAMP_DUTY"
    case outputSwift = "OPERATION_TYPE_OUTPUT_SWIFT"
    case inputSwift = "OPERATION_TYPE_INPUT_SWIFT"
    case outputAcquiring = "OPERATION_TYPE_OUTPUT_ACQUIRING"
    case inputAcquiring = "OPERATION_TYPE_INPUT_ACQUIRING"
    case outputPenalty = "OPERATION_TYPE_OUTPUT_PENALTY"
    case adviceFee = "OPERATION_TYPE_ADVICE_FEE"
    case transIisBs = "OPERATION_TYPE_TRANS_IIS_BS"
    case transBsBs = "OPERATION_TYPE_TRANS_BS_BS"
    case outMulti = "OPERATION_TYPE_OUT_MULTI"
    case inpMulti = "OPERATION_TYPE_INP_MULTI"
    case overPlacement = "OPERATION_TYPE_OVER_PLACEMENT"
    case overCom = "OPERATION_TYPE_OVER_COM"
    case overIncome = "OPERATION_TYPE_OVER_INCOME"
    case optionExpiration = "OPERATION_TYPE_OPTION_EXPIRATION"
}