//
// PostStopOrderRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

/** Запрос выставления стоп-заявки. */

public struct PostStopOrderRequest: Codable {
    public let accountId: String
    public let instrumentId: String

    /** Идентификатор запроса выставления поручения для целей идемпотентности в формате UID. Максимальная длина 36 символов. */
    public let orderId: String?
    public let stopOrderType: StopOrderType
    public let direction: StopOrderDirection
    public let quantity: String
    public let priceType: PriceType?

    /// Стоп-цена заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
    public let stopPrice: Quotation

    /// Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
    public let price: Quotation
    public let expirationType: StopOrderExpirationType

    /// Дата и время окончания действия стоп-заявки в часовом поясе UTC.
    /// Для `expirationType.goodTillDate` заполнение обязательно, для `.goodTillCancel` — игнорируется.
    public let expireDate: Date?

    /// Тип дочерней биржевой заявки для тейкпрофита.
    public let exchangeOrderType: ExchangeOrderType?
    public let takeProfitType: TakeProfitType?
    public let trailingData: TrailingData?

    public init(accountId: String, instrumentId: String, stopOrderType: StopOrderType, direction: StopOrderDirection, quantity: String, stopPrice: Quotation, price: Quotation, expirationType: StopOrderExpirationType, expireDate: Date? = nil, exchangeOrderType: ExchangeOrderType? = nil, takeProfitType: TakeProfitType? = nil, trailingData: TrailingData? = nil, priceType: PriceType? = nil, orderId: String? = nil) {
        self.accountId = accountId
        self.instrumentId = instrumentId
        self.stopOrderType = stopOrderType
        self.direction = direction
        self.quantity = quantity
        self.stopPrice = stopPrice
        self.price = price
        self.expirationType = expirationType
        self.expireDate = expireDate
        self.exchangeOrderType = exchangeOrderType
        self.takeProfitType = takeProfitType
        self.trailingData = trailingData
        self.priceType = priceType
        self.orderId = orderId
    }
}
